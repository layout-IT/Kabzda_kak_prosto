{"version":3,"sources":["components/accordion/Accordion.tsx","components/rating/Rating.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Accordion","props","AccordionTitle","title","onChange","collapsed","AccordionBody","onClick","Rating","useState","on","setOn","className","Star","selected","value","console","log","PageTitle","App","accordionCollapsed","setAccordionCollapsed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2LASO,SAASA,EAAUC,GAEtB,OAAO,gCACH,cAACC,EAAD,CAAgBC,MAAOF,EAAME,MACbC,SAAUH,EAAMG,YAE9BH,EAAMI,WAAa,cAACC,EAAD,OAS7B,SAASJ,EAAeD,GACpB,OAAO,oBAAIM,QAAS,WAChBN,EAAMG,YADH,SAEHH,EAAME,QAGd,SAASG,IACL,OACI,+BACI,mCACA,mCACA,mCACA,sCChCL,SAASE,EAAOP,GAAa,IAAD,EACbQ,mBAAS,GADI,mBAC1BC,EAD0B,KACtBC,EADsB,KAE/B,OACI,sBAAKC,UAAW,OAAhB,UACI,cAACC,EAAD,CAAMC,SAAUJ,EAAK,EAAGC,MAAOA,EAAOI,MAAO,IAC7C,cAACF,EAAD,CAAMC,SAAUJ,EAAK,EAAGC,MAAOA,EAAOI,MAAO,IAC7C,cAACF,EAAD,CAAMC,SAAUJ,EAAK,EAAGC,MAAOA,EAAOI,MAAO,IAC7C,cAACF,EAAD,CAAMC,SAAUJ,EAAK,EAAGC,MAAOA,EAAOI,MAAO,IAC7C,cAACF,EAAD,CAAMC,SAAUJ,EAAK,EAAGC,MAAOA,EAAOI,MAAO,OAWlD,SAASF,EAAKZ,GAEjB,OADAe,QAAQC,IAAI,kBACL,qBAAKL,UAAW,OAAQL,QAAS,WACpCN,EAAMU,MAAMV,EAAMc,QADf,SAGFd,EAAMa,SAAW,qCAAc,SCFxC,SAASI,EAAUjB,GAEf,OAAO,6BAAKA,EAAME,QAGPgB,MAxBf,WAAgB,IAAD,EACuCV,oBAAkB,GADzD,mBACNW,EADM,KACcC,EADd,KAEX,OACI,gCAEI,cAACH,EAAD,CAAWf,MAAO,eAClB,cAACe,EAAD,CAAWf,MAAO,oBAElB,cAACH,EAAD,CAAWG,MAAO,gBACPE,UAAWe,EACXhB,SAAU,WACNiB,GAAuBD,MAGtC,cAACZ,EAAD,QCPGc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAMjDZ,K","file":"static/js/main.8918432c.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {findAllByDisplayValue} from \"@testing-library/react\";\r\n\r\ntype AccordionPropsType = {\r\n    title: string\r\n    collapsed: boolean\r\n    onChange: () => void\r\n}\r\n\r\nexport function Accordion(props: AccordionPropsType) {\r\n\r\n    return <div>\r\n        <AccordionTitle title={props.title}\r\n                        onChange={props.onChange}/>\r\n\r\n        {!props.collapsed && <AccordionBody/>}\r\n    </div>\r\n}\r\n\r\ntype AccordionTitleType = {\r\n    title: string\r\n    onChange: () => void\r\n}\r\n\r\nfunction AccordionTitle(props: AccordionTitleType) {\r\n    return <h3 onClick={() => {\r\n        props.onChange()\r\n    }}>{props.title}</h3>\r\n}\r\n\r\nfunction AccordionBody() {\r\n    return (\r\n        <ul>\r\n            <li>1</li>\r\n            <li>2</li>\r\n            <li>3</li>\r\n            <li>4</li>\r\n        </ul>\r\n    )\r\n}","import React, {useState} from \"react\";\r\n\r\n\r\n\r\nexport function Rating(props: any) {\r\n    let [on, setOn] = useState(0)\r\n    return (\r\n        <div className={'star'}>\r\n            <Star selected={on > 0} setOn={setOn} value={1}/>\r\n            <Star selected={on > 1} setOn={setOn} value={2}/>\r\n            <Star selected={on > 2} setOn={setOn} value={3}/>\r\n            <Star selected={on > 3} setOn={setOn} value={4}/>\r\n            <Star selected={on > 4} setOn={setOn} value={5}/>\r\n\r\n        </div>)\r\n}\r\n\r\ntype StarType = {\r\n    selected: boolean\r\n    setOn: (value: 1 | 2 | 3 | 4 | 5) => void\r\n    value: 1 | 2 | 3 | 4 | 5\r\n}\r\n\r\nexport function Star(props: StarType) {\r\n    console.log('star rendering')\r\n    return <div className={'text'} onClick={() => {\r\n        props.setOn(props.value)\r\n    }}>\r\n        {props.selected ? <b>star</b> : 'star'}</div>\r\n}","import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Accordion} from \"./components/accordion/Accordion\";\nimport {Rating} from \"./components/rating/Rating\";\nimport {isBoolean} from \"util\";\n\nfunction App() {\n    let [accordionCollapsed, setAccordionCollapsed] = useState<boolean>(false)\n    return (\n        <div>\n\n            <PageTitle title={'My friends'}/>\n            <PageTitle title={'This is APP com'}/>\n\n            <Accordion title={'accordion one'}\n                       collapsed={accordionCollapsed}\n                       onChange={() => {\n                           setAccordionCollapsed(!accordionCollapsed)\n                       }}/>\n\n            <Rating/>\n        </div>\n    );\n}\n\nfunction PageTitle(props: any) {\n\n    return <h1>{props.title}</h1>\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}